import{h as Ls,g as ns,c as Rs,z as zs,y as Ns,B as es,b as Os,F as js,T as Gs,C as ps,f as Z,a as S,G as rs,o as P,s as a,t as Ps,p as U}from"./disclose-version.DOvlZpYt.js";import{b as Us,a as Ys,g as Hs,Q as N,E as Vs,X as Zs,Y as Ks,T as Qs,n as Xs,c as Js,Z as $s,q as os,h as cs,j as ys,t as is,k as t,D as _,d as ls,s as Y}from"./runtime.KCf5Iwgn.js";import{e as sa,i as aa}from"./each.DfVqkM19.js";import{p as q,i as Es,a as na}from"./props.DY461nBn.js";import{o as ea}from"./index-client.Dw-JqChD.js";import{s as B}from"./attributes.BOuw2Dhl.js";import{b as oa}from"./render.BFlZD6Jo.js";function H(l,s,r,p,n){var E=l,F="",y;Us(()=>{F!==(F=s())&&(y&&(Hs(y),y=null),F!==""&&(y=Ys(()=>{if(Ls){ns.data;for(var e=Rs(),o=e;e!==null&&(e.nodeType!==8||e.data!=="");)o=e,e=e.nextSibling;if(e===null)throw zs(),Ns;es(ns,o),E=Os(e);return}var D=F+"",i=js(D);es(i.firstChild,i.lastChild),E.before(i)})))})}const Fs=typeof window<"u",la=Fs?requestAnimationFrame:N,ta=Fs?()=>performance.now():()=>Date.now(),v={tick:l=>la(l),now:()=>ta(),tasks:new Set};function ds(l){v.tasks.forEach(s=>{s.c(l)||(v.tasks.delete(s),s.f())}),v.tasks.size!==0&&v.tick(ds)}function pa(l){let s;return v.tasks.size===0&&v.tick(ds),{promise:new Promise(r=>{v.tasks.add(s={c:l,f:r})}),abort(){v.tasks.delete(s)}}}function z(l,s){l.dispatchEvent(new CustomEvent(s))}function ra(l){const s=l.split("-");return s.length===1?s[0]:s[0]+s.slice(1).map(r=>r[0].toUpperCase()+r.slice(1)).join("")}function ts(l){const s={},r=l.split(";");for(const p of r){const[n,E]=p.split(":");if(!n||E===void 0)break;const F=ra(n.trim());s[F]=E.trim()}return s}const ca=l=>l;function ya(l,s,r,p){var n=(l&Gs)!==0,E="both",F,y=s.inert,e,o;function D(){return F??(F=r()(s,p==null?void 0:p(),{direction:E}))}var i={is_global:n,in(){s.inert=y,o==null||o.abort(),e==null||e.abort(),z(s,"introstart"),e=V(s,D(),o,1,()=>{z(s,"introend"),e==null||e.abort(),e=F=void 0},void 0)},out(c){o==null||o.abort(),s.inert=!0,z(s,"outrostart"),o=V(s,D(),e,0,()=>{z(s,"outroend"),o==null||o.abort(),o=F=void 0,c==null||c()},void 0),o.reset},stop:()=>{e==null||e.abort(),o==null||o.abort()}},h=Js;if((h.transitions??(h.transitions=[])).push(i),oa){let c=n;if(!c){for(var d=h.parent;d&&d.f&Vs;)for(;(d=d.parent)&&!(d.f&Zs););c=!d||(d.f&Ks)!==0}c&&Qs(()=>{Xs(()=>i.in())})}}function V(l,s,r,p,n,E){var F=p===1;if($s(s)){var y,e=!1;return os(()=>{if(!e){var u=s({direction:F?"in":"out"});y=V(l,u,r,p,n,E)}}),{abort:()=>{e=!0,y==null||y.abort()},deactivate:()=>y.deactivate(),reset:()=>y.reset(),t:u=>y.t(u)}}if(r==null||r.deactivate(),!(s!=null&&s.duration))return n==null||n(),{abort:N,deactivate:N,reset:N,t:()=>p};const{delay:o=0,css:D,tick:i,easing:h=ca}=s;var d=v.now()+o,c=(r==null?void 0:r.t(d))??1-p,C=p-c,k=s.duration*Math.abs(C),L=d+k,f,b;return D?os(()=>{var u=[],A=Math.ceil(k/16.666666666666668);if(F&&o>0){let T=Math.ceil(o/16.666666666666668),O=ts(D(0,1));for(let M=0;M<T;M+=1)u.push(O)}for(var I=0;I<=A;I+=1){var W=c+C*h(I/A),R=D(W,1-W);u.push(ts(R))}f=l.animate(u,{delay:F?0:o,duration:k+(F?o:0),easing:"linear",fill:"forwards"}),f.finished.then(()=>{n==null||n(),p===1&&f.cancel()}).catch(T=>{if(f.startTime!==null&&f.currentTime!==null)throw T})}):(c===0&&(i==null||i(0,1)),b=pa(u=>{if(u>=L)return i==null||i(p,1-p),n==null||n(),!1;if(u>=d){var A=c+C*h((u-d)/k);i==null||i(A,1-A)}return!0})),{abort:()=>{f&&(f.cancel(),f.effect=null),b==null||b.abort(),E==null||E(),n=void 0,E=void 0},deactivate:()=>{n=void 0,E=void 0},reset:()=>{p===0&&(i==null||i(1,0))},t:u=>{var A=c+C*h((u-d)/k);return Math.min(1,Math.max(0,A))}}}const ia=l=>l;function Ea(l,{delay:s=0,duration:r=400,easing:p=ia}={}){const n=+getComputedStyle(l).opacity;return{delay:s,duration:r,easing:p,css:E=>`opacity: ${E*n}`}}var Fa=rs('<path stroke-linecap="square"></path>');function m(l,s){cs(s,!0);const r=q(s,"draw",3,"regular"),p=q(s,"stroke",3,"white"),n=q(s,"strokeWidth",3,2),E=q(s,"fill",3,"none"),F=q(s,"strokeDasharray",3,"none"),y=1e3;let e=new Array(y).fill().map((c,C)=>2*Math.PI*(C/y)).map(c=>`L${s.cx+s.r*Math.cos(c)} ${s.cy+s.r*Math.sin(c)}`);const o=r()==="reversed";e=o?e.reverse():e,e[0]=e[0].replace("L","M");let D=_(()=>{if(r()=="none")return y;if(s.time<=s.delay||s.time>s.delay+s.duration+s.hold+5)return 0;let c=y*(s.time-s.delay)/s.duration;return o?1-c:c}),i=_(()=>e.slice(0,t(D)).join(" "));var h=ps(),d=Z(h);Es(d,()=>s.time>s.delay&&s.time<s.delay+s.duration,c=>{var C=Fa();is(()=>{B(C,"d",t(i)),B(C,"stroke",p()),B(C,"fill",E()),B(C,"stroke-dasharray",F()),B(C,"stroke-width",n())}),ya(3,C,()=>Ea),S(c,C)}),S(l,h),ys()}var da=rs('<path stroke-linecap="square"></path>');function x(l,s){function r(e,o,D){return e<=o?o:e>=D?D:e}let p=_(()=>r((s.time-s.delay)/s.duration,0,1)),n=_(()=>s.x0+(s.x2-s.x0)*t(p)),E=_(()=>s.y0+(s.y2-s.y0)*t(p));var F=ps(),y=Z(F);Es(y,()=>t(p)>0,e=>{var o=da();is(()=>{B(o,"d",`M ${s.x0??""} ${s.y0??""} L ${t(n)??""} ${t(E)??""}`),B(o,"stroke",s.stroke),B(o,"stroke-dasharray",s.strokeDashArray),B(o,"stroke-width",s.strokeWidth)}),S(e,o)}),S(l,F)}var Ca=Ps('<svg viewbox="0 0 600 100" class="w-full mt-24 mb-12 mx-auto"><path d="M0 50 L 250 50" stroke="#2c5943" stroke-dasharray="0 1 0"></path><path d="M300 50 L 600 50" stroke="#2c5943" stroke-dasharray="0 1 0"></path><!><rect x="100" y="0" width="100" height="100" rx="15" fill="#2c5943"></rect><!><!><!><!><!><rect x="250" y="0" width="100" height="100" rx="15" fill="#2c5943"></rect><path d="M300 0 L 300 100" stroke="white" stroke-dasharray="0 1 0"></path><path d="M250 50 L 350 50" stroke="white" stroke-dasharray="0 1 0"></path><!><!><!><!><!><rect x="400" y="0" width="100" height="100" rx="15" fill="#2c5943"></rect><!><!><!><!></svg> <p>In what may be a minor form of <a href="https://www.charliehealth.com/post/what-is-hyperfixation" rel="nofollow">hyperfixation</a>, Iâ€™ve been totally hooked on the idea of animating svg shapes with <a href="https://svelte.dev/" rel="nofollow">Svelte</a>.</p> <p>I wrote <a href="https://twirldata.com" rel="nofollow">a website recently for work</a>, and as part of that process I got connected to fantastic designer (who Iâ€™ll mention by name if I get permission) who supplied me with everything I needed.</p> <p>One aspect of her vision was to include lots of fun iconographics and animations, and it turns out sheâ€™s skilled at making little 2D animations in <a href="https://www.adobe.com/products/aftereffects.html" rel="nofollow">AfterEffects</a>.</p> <p>When I saw these my thought wasâ€” so cool! And my second thought was: I could do that in code! (on the website itâ€™s a <a href="https://lottiefiles.com/" rel="nofollow">lottie</a>), and it would be soooo slick.</p> <svg viewbox="0 0 900 100" class="my-12 mx-auto">rect> <!></svg> <p>Of course, itâ€™s already slick. Thereâ€™s no need at all to do more, itâ€™s great the way it is. But stillâ€¦ how does <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/requestAnimationFrame" rel="nofollow">requestAnimationFrame</a> work anyway?</p> <p>And of course you could do all this in vanilla javascript, but Svelte saves you having to manually modify the DOM, and it turns out the timing / animation apparatus is really easy!</p> <p>Hereâ€™s everything I needed for the animation timing (cribbed from <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/requestAnimationFrame#examples" rel="nofollow">here</a>):</p> <!> <p>Note if you try to do this with recursive <code>setTimeout</code>s like I did at first, youâ€™ll be up a creek. setTimeout is super unreliable for syncing multiple animations, which is why the animation API exists in browsers.</p> <p>What I like about the example Iâ€™m recreating here is itâ€™s tight timing and sense of rhythm. To achieve that, we just have a Svelte component that receives the <code>time</code> prop from the parent above, and then computes an SVG <code>&lt;path/&gt;</code> that corresponds to the desired effect and timing.</p> <div class="p-4 bg-gray-200"><p>Note the <a href="https://svelte.dev/docs/svelte-transition" rel="nofollow">svelte/transition</a> package has <code>draw</code> in it, which achieves much of the same effect by <a href="https://css-tricks.com/svg-line-animation-works/" rel="nofollow">stroke-dash animation</a>--- but I wanted my lines to retain their stroke dashes, and also to build towards working with more complicated shapes that canâ€™t be animated with this trick.</p></div> <p>Once you have the timing, Svelte makes the rest really easy.</p> <svg viewbox="0 0 600 100" class="w-full mx-auto"><!><!><!></svg> <p>Check it out:</p> <!> <p>Sidenote wouldnâ€™t it be nice if <code>clamp</code> were <a href="https://stackoverflow.com/questions/11409895/whats-the-most-elegant-way-to-cap-a-number-to-a-segment#comment137766458_39477954" rel="nofollow">part of Math</a>?</p> <p>The colorful lines above are just</p> <!> <p>The circles are the same deal, just using a little trigonometry to make a 1000 line segments look like a circle.</p> <p>Iâ€™m not sure whatâ€™s next. It seems like it would be pretty easy to add <a href="https://svelte.dev/docs/svelte-easing" rel="nofollow">easing</a>, but Iâ€™d also like to explore <a href="https://www.youtube.com/watch?v=qlfh_rv6khY" rel="nofollow">procedural animation</a>, or maybe incorporating <a href="https://brm.io/matter-js/" rel="nofollow">physics</a> to make some sort of <a href="https://en.wikipedia.org/wiki/Rube_Goldberg_machine" rel="nofollow">Rube Goldberg machine</a>.</p> <p>ðŸ”²</p>',1);const va={layout:"post",title:"Animated SVG Circles with Svelte",date:"2024-09-27T00:00:00.000Z"};function ka(l,s){cs(s,!0);const r=5500;let p=ls(void 0),n=ls(void 0);function E(w){Y(p,na(w)),F(w)}function F(w){Y(n,w-t(p)),t(n)<r?requestAnimationFrame(g=>F(g)):(Y(n,0),setTimeout(()=>requestAnimationFrame(E),100))}ea(()=>{requestAnimationFrame(E)});var y=Ca(),e=Z(y),o=P(e),D=a(o),i=a(D);x(i,{x0:0,x2:100,y0:50,y2:50,stroke:"#2c5943",strokeWidth:4,get time(){return t(n)},delay:"0",duration:250});var h=a(i),d=a(h);m(d,{cx:150,cy:50,r:25,get time(){return t(n)},delay:"250",duration:"500",hold:"500",draw:"reversed"});var c=a(d);m(c,{cx:150,cy:50,r:35,get time(){return t(n)},delay:"750",duration:"500",strokeDasharray:"4 4"});var C=a(c);m(C,{cx:150,cy:50,r:45,get time(){return t(n)},delay:"1250",duration:"500",strokeDasharray:"0 4"});var k=a(C);m(k,{cx:150,cy:50,r:25,get time(){return t(n)},delay:"1750",duration:"500",hold:"400"});var L=a(k);x(L,{x0:200,x2:250,y0:50,y2:50,stroke:"#2c5943",strokeWidth:4,get time(){return t(n)},delay:"2250",duration:250});var f=a(L),b=a(f),u=a(b),A=a(u);m(A,{cx:300,cy:50,r:25,get time(){return t(n)},stroke:"none",fill:"white",delay:"2500",duration:"250",hold:"500",draw:"none"});var I=a(A);m(I,{cx:300,cy:50,r:25,get time(){return t(n)},delay:"0",duration:"4000",hold:"500",draw:"none"});var W=a(I);m(W,{cx:300,cy:50,r:35,get time(){return t(n)},delay:"3000",duration:"500"});var R=a(W);m(R,{cx:300,cy:50,r:45,get time(){return t(n)},delay:"3500",duration:"500",strokeDasharray:"0 4"});var T=a(R);x(T,{x0:350,x2:450,y0:50,y2:50,stroke:"#2c5943",strokeWidth:4,get time(){return t(n)},delay:"4000",duration:250});var O=a(T),M=a(O);m(M,{cx:450,cy:50,r:25,get time(){return t(n)},delay:"0",duration:"4000",hold:"500",draw:"none"});var K=a(M);m(K,{cx:450,cy:50,r:28,get time(){return t(n)},delay:"4250",duration:"500",hold:"500",strokeWidth:10});var Q=a(K);m(Q,{cx:450,cy:50,r:45,get time(){return t(n)},delay:"4750",duration:"500",strokeDasharray:"0 4"});var Cs=a(Q);x(Cs,{x0:500,x2:600,y0:50,y2:50,stroke:"#2c5943",strokeWidth:4,get time(){return t(n)},delay:"5250",duration:250}),U(e);var Ds=a(a(e,!0)),us=a(a(Ds,!0)),hs=a(a(us,!0)),ms=a(a(hs,!0)),j=a(a(ms,!0)),fs=a(P(j));sa(fs,16,()=>Array(30).fill().map((w,g)=>g*10),aa,(w,g)=>{var qs=_(()=>250+2*g),Ss=_(()=>g*5);m(w,{get cx(){return t(qs)},cy:50,get r(){return g},get time(){return t(n)},stroke:"firebrick",get delay(){return t(Ss)},duration:500,hold:"500"})}),U(j);var As=a(a(j,!0)),Bs=a(a(As,!0)),vs=a(a(Bs,!0)),X=a(a(vs,!0));H(X,()=>`<pre class="shiki nord" style="background-color:#2e3440ff;color:#d8dee9ff" tabindex="0"><code><span class="line"><span style="color:#81A1C1">&#x3C;script></span></span>
<span class="line"><span style="color:#81A1C1">  const</span><span style="color:#D8DEE9"> loop_time</span><span style="color:#81A1C1"> =</span><span style="color:#B48EAD"> 5_500</span><span style="color:#81A1C1">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  let</span><span style="color:#D8DEE9"> zero</span><span style="color:#81A1C1"> =</span><span style="color:#81A1C1"> $</span><span style="color:#88C0D0">state</span><span style="color:#D8DEE9FF">()</span><span style="color:#81A1C1">;</span></span>
<span class="line"><span style="color:#81A1C1">  let</span><span style="color:#D8DEE9"> time</span><span style="color:#81A1C1"> =</span><span style="color:#81A1C1"> $</span><span style="color:#88C0D0">state</span><span style="color:#D8DEE9FF">()</span><span style="color:#81A1C1">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  function</span><span style="color:#88C0D0"> firstFrame</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9">timestamp</span><span style="color:#ECEFF4">)</span><span style="color:#ECEFF4"> &#123;</span></span>
<span class="line"><span style="color:#D8DEE9">    zero</span><span style="color:#81A1C1"> =</span><span style="color:#D8DEE9"> timestamp</span><span style="color:#81A1C1">;</span></span>
<span class="line"><span style="color:#88C0D0">    animate</span><span style="color:#D8DEE9FF">(</span><span style="color:#D8DEE9">timestamp</span><span style="color:#D8DEE9FF">)</span><span style="color:#81A1C1">;</span></span>
<span class="line"><span style="color:#ECEFF4">  &#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  function</span><span style="color:#88C0D0"> animate</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9">timestamp</span><span style="color:#ECEFF4">)</span><span style="color:#ECEFF4"> &#123;</span></span>
<span class="line"><span style="color:#D8DEE9">    time</span><span style="color:#81A1C1"> =</span><span style="color:#D8DEE9"> timestamp</span><span style="color:#81A1C1"> -</span><span style="color:#D8DEE9"> zero</span><span style="color:#81A1C1">;</span></span>
<span class="line"><span style="color:#81A1C1">    if</span><span style="color:#D8DEE9FF"> (</span><span style="color:#D8DEE9">time</span><span style="color:#81A1C1"> &#x3C;</span><span style="color:#D8DEE9"> loop_time</span><span style="color:#D8DEE9FF">) </span><span style="color:#ECEFF4">&#123;</span></span>
<span class="line"><span style="color:#88C0D0">      requestAnimationFrame</span><span style="color:#D8DEE9FF">(</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9">t</span><span style="color:#ECEFF4">)</span><span style="color:#81A1C1"> =></span><span style="color:#88C0D0"> animate</span><span style="color:#D8DEE9FF">(</span><span style="color:#D8DEE9">t</span><span style="color:#D8DEE9FF">))</span><span style="color:#81A1C1">;</span></span>
<span class="line"><span style="color:#ECEFF4">    &#125;</span><span style="color:#81A1C1"> else</span><span style="color:#ECEFF4"> &#123;</span></span>
<span class="line"><span style="color:#D8DEE9">      time</span><span style="color:#81A1C1"> =</span><span style="color:#B48EAD"> 0</span><span style="color:#81A1C1">;</span></span>
<span class="line"><span style="color:#88C0D0">      setTimeout</span><span style="color:#D8DEE9FF">(</span><span style="color:#ECEFF4">()</span><span style="color:#81A1C1"> =></span><span style="color:#88C0D0"> requestAnimationFrame</span><span style="color:#D8DEE9FF">(</span><span style="color:#D8DEE9">firstFrame</span><span style="color:#D8DEE9FF">)</span><span style="color:#ECEFF4">,</span><span style="color:#B48EAD"> 100</span><span style="color:#D8DEE9FF">)</span><span style="color:#81A1C1">;</span></span>
<span class="line"><span style="color:#ECEFF4">    &#125;</span></span>
<span class="line"><span style="color:#ECEFF4">  &#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88C0D0">  onMount</span><span style="color:#D8DEE9FF">(</span><span style="color:#ECEFF4">()</span><span style="color:#81A1C1"> =></span><span style="color:#ECEFF4"> &#123;</span></span>
<span class="line"><span style="color:#88C0D0">    requestAnimationFrame</span><span style="color:#D8DEE9FF">(</span><span style="color:#D8DEE9">firstFrame</span><span style="color:#D8DEE9FF">)</span><span style="color:#81A1C1">;</span></span>
<span class="line"><span style="color:#ECEFF4">  &#125;</span><span style="color:#D8DEE9FF">)</span><span style="color:#81A1C1">;</span></span>
<span class="line"><span style="color:#81A1C1">&#x3C;/script></span></span></code></pre>`);var ks=a(a(X,!0)),ws=a(a(ks,!0)),gs=a(a(ws,!0)),xs=a(a(gs,!0)),G=a(a(xs,!0)),J=P(G);x(J,{x0:0,x2:600,y0:50,y2:50,stroke:"Tomato",strokeWidth:20,strokeDashArray:"0 25 0 25 0 25",delay:"0",duration:"3000",get time(){return t(n)}});var $=a(J);x($,{x0:0,x2:600,y0:20,y2:30,stroke:"MediumSeaGreen",strokeWidth:20,strokeDashArray:"0 0 50 0 25 50 25",delay:"0",duration:"4000",get time(){return t(n)}});var _s=a($);x(_s,{x0:0,x2:600,y0:40,y2:10,stroke:"DodgerBlue",strokeWidth:10,strokeDashArray:"0 25 50 0 25 50 25",delay:"3000",duration:"500",get time(){return t(n)}}),U(G);var bs=a(a(G,!0)),ss=a(a(bs,!0));H(ss,()=>`<pre class="shiki nord" style="background-color:#2e3440ff;color:#d8dee9ff" tabindex="0"><code><span class="line"><span style="color:#81A1C1">&#x3C;script></span></span>
<span class="line"><span style="color:#81A1C1">  const</span><span style="color:#ECEFF4"> &#123;</span></span>
<span class="line"><span style="color:#D8DEE9">    x0</span><span style="color:#ECEFF4">,</span></span>
<span class="line"><span style="color:#D8DEE9">    y0</span><span style="color:#ECEFF4">,</span></span>
<span class="line"><span style="color:#D8DEE9">    x2</span><span style="color:#ECEFF4">,</span></span>
<span class="line"><span style="color:#D8DEE9">    y2</span><span style="color:#ECEFF4">,</span></span>
<span class="line"><span style="color:#D8DEE9">    delay</span><span style="color:#ECEFF4">,</span></span>
<span class="line"><span style="color:#D8DEE9">    duration</span><span style="color:#ECEFF4">,</span></span>
<span class="line"><span style="color:#D8DEE9">    time</span><span style="color:#ECEFF4">,</span></span>
<span class="line"><span style="color:#D8DEE9">    stroke</span><span style="color:#ECEFF4">,</span></span>
<span class="line"><span style="color:#D8DEE9">    strokeWidth</span><span style="color:#ECEFF4">,</span></span>
<span class="line"><span style="color:#D8DEE9">    strokeDasharray</span></span>
<span class="line"><span style="color:#ECEFF4">  &#125;</span><span style="color:#81A1C1"> =</span><span style="color:#81A1C1"> $</span><span style="color:#88C0D0">props</span><span style="color:#D8DEE9FF">()</span><span style="color:#81A1C1">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  function</span><span style="color:#88C0D0"> clamp</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9">num</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9"> min</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9"> max</span><span style="color:#ECEFF4">)</span><span style="color:#ECEFF4"> &#123;</span></span>
<span class="line"><span style="color:#81A1C1">    return</span><span style="color:#D8DEE9"> num</span><span style="color:#81A1C1"> &#x3C;=</span><span style="color:#D8DEE9"> min</span><span style="color:#D8DEE9FF"> </span></span>
<span class="line"><span style="color:#81A1C1">      ?</span><span style="color:#D8DEE9"> min</span><span style="color:#D8DEE9FF"> </span></span>
<span class="line"><span style="color:#81A1C1">      :</span><span style="color:#D8DEE9"> num</span><span style="color:#81A1C1"> >=</span><span style="color:#D8DEE9"> max</span><span style="color:#D8DEE9FF"> </span></span>
<span class="line"><span style="color:#81A1C1">        ?</span><span style="color:#D8DEE9"> max</span><span style="color:#D8DEE9FF"> </span></span>
<span class="line"><span style="color:#81A1C1">        :</span><span style="color:#D8DEE9"> num</span></span>
<span class="line"><span style="color:#ECEFF4">  &#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  let</span><span style="color:#D8DEE9"> frac</span><span style="color:#81A1C1"> =</span><span style="color:#81A1C1"> $</span><span style="color:#88C0D0">derived</span><span style="color:#D8DEE9FF">(</span><span style="color:#88C0D0">clamp</span><span style="color:#D8DEE9FF">((</span><span style="color:#D8DEE9">time</span><span style="color:#81A1C1"> -</span><span style="color:#D8DEE9"> delay</span><span style="color:#D8DEE9FF">) </span><span style="color:#81A1C1">/</span><span style="color:#D8DEE9"> duration</span><span style="color:#ECEFF4">,</span><span style="color:#B48EAD"> 0</span><span style="color:#ECEFF4">,</span><span style="color:#B48EAD"> 1</span><span style="color:#D8DEE9FF">))</span></span>
<span class="line"><span style="color:#81A1C1">  let</span><span style="color:#D8DEE9"> x1</span><span style="color:#81A1C1"> =</span><span style="color:#81A1C1"> $</span><span style="color:#D8DEE9">derived</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">by</span><span style="color:#D8DEE9FF">(</span><span style="color:#ECEFF4">()</span><span style="color:#81A1C1"> =></span><span style="color:#ECEFF4"> &#123;</span><span style="color:#81A1C1"> return</span><span style="color:#D8DEE9"> x0</span><span style="color:#81A1C1"> +</span><span style="color:#D8DEE9FF"> (</span><span style="color:#D8DEE9">x2</span><span style="color:#81A1C1"> -</span><span style="color:#D8DEE9"> x0</span><span style="color:#D8DEE9FF">) </span><span style="color:#81A1C1">*</span><span style="color:#D8DEE9"> frac</span><span style="color:#ECEFF4"> &#125;</span><span style="color:#D8DEE9FF">)</span></span>
<span class="line"><span style="color:#81A1C1">  let</span><span style="color:#D8DEE9"> y1</span><span style="color:#81A1C1"> =</span><span style="color:#81A1C1"> $</span><span style="color:#D8DEE9">derived</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">by</span><span style="color:#D8DEE9FF">(</span><span style="color:#ECEFF4">()</span><span style="color:#81A1C1"> =></span><span style="color:#ECEFF4"> &#123;</span><span style="color:#81A1C1"> return</span><span style="color:#D8DEE9"> y0</span><span style="color:#81A1C1"> +</span><span style="color:#D8DEE9FF"> (</span><span style="color:#D8DEE9">y2</span><span style="color:#81A1C1"> -</span><span style="color:#D8DEE9"> y0</span><span style="color:#D8DEE9FF">) </span><span style="color:#81A1C1">*</span><span style="color:#D8DEE9"> frac</span><span style="color:#ECEFF4"> &#125;</span><span style="color:#D8DEE9FF">)</span></span>
<span class="line"><span style="color:#81A1C1">&#x3C;/script></span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">&#x3C;path</span></span>
<span class="line"><span style="color:#8FBCBB">  d</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">M </span><span style="color:#81A1C1">&#123;</span><span style="color:#D8DEE9">x0</span><span style="color:#81A1C1">&#125;</span><span style="color:#81A1C1"> &#123;</span><span style="color:#D8DEE9">y0</span><span style="color:#81A1C1">&#125;</span><span style="color:#A3BE8C"> L </span><span style="color:#81A1C1">&#123;</span><span style="color:#D8DEE9">x1</span><span style="color:#81A1C1">&#125;</span><span style="color:#81A1C1"> &#123;</span><span style="color:#D8DEE9">y1</span><span style="color:#81A1C1">&#125;</span><span style="color:#ECEFF4">"</span></span>
<span class="line"><span style="color:#8FBCBB">  &#123;</span><span style="color:#D8DEE9">stroke</span><span style="color:#8FBCBB">&#125;</span></span>
<span class="line"><span style="color:#8FBCBB">  stroke-dasharray</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#D8DEE9">strokeDasharray</span><span style="color:#81A1C1">&#125;</span></span>
<span class="line"><span style="color:#8FBCBB">  stroke-linecap</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">square</span><span style="color:#ECEFF4">"</span></span>
<span class="line"><span style="color:#8FBCBB">  stroke-width</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#D8DEE9">strokeWidth</span><span style="color:#81A1C1">&#125;</span></span>
<span class="line"><span style="color:#81A1C1">></span></span>
<span class="line"><span style="color:#81A1C1">&#x3C;/path></span></span></code></pre>`);var Is=a(a(ss,!0)),Ts=a(a(Is,!0)),as=a(a(Ts,!0));H(as,()=>`<pre class="shiki nord" style="background-color:#2e3440ff;color:#d8dee9ff" tabindex="0"><code><span class="line"><span style="color:#81A1C1">&#x3C;svg</span><span style="color:#8FBCBB"> viewbox</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">0 0 600 100</span><span style="color:#ECEFF4">"</span><span style="color:#8FBCBB"> class</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">w-full mx-auto</span><span style="color:#ECEFF4">"</span><span style="color:#81A1C1">></span></span>
<span class="line"><span style="color:#81A1C1">  &#x3C;</span><span style="color:#8FBCBB">Line</span><span style="color:#D8DEE9FF"> </span></span>
<span class="line"><span style="color:#8FBCBB">    x0</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#B48EAD">0</span><span style="color:#81A1C1">&#125;</span><span style="color:#8FBCBB"> x2</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#B48EAD">600</span><span style="color:#81A1C1">&#125;</span><span style="color:#8FBCBB"> y0</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#B48EAD">40</span><span style="color:#81A1C1">&#125;</span><span style="color:#8FBCBB"> y2</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#B48EAD">10</span><span style="color:#81A1C1">&#125;</span><span style="color:#8FBCBB"> stroke</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">DodgerBlue</span><span style="color:#ECEFF4">"</span><span style="color:#D8DEE9FF"> </span></span>
<span class="line"><span style="color:#8FBCBB">    strokeWidth</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#B48EAD">10</span><span style="color:#81A1C1">&#125;</span><span style="color:#8FBCBB"> strokeDashArray</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">0 25 50 0 25 50 25</span><span style="color:#ECEFF4">"</span><span style="color:#8FBCBB"> delay</span><span style="color:#ECEFF4">=</span><span style="color:#B48EAD">3000</span><span style="color:#8FBCBB"> duration</span><span style="color:#ECEFF4">=</span><span style="color:#B48EAD">500</span><span style="color:#8FBCBB"> &#123;</span><span style="color:#D8DEE9">time</span><span style="color:#8FBCBB">&#125;</span></span>
<span class="line"><span style="color:#81A1C1">  /></span></span>
<span class="line"><span style="color:#81A1C1">  &#x3C;</span><span style="color:#8FBCBB">Line</span><span style="color:#D8DEE9FF"> </span></span>
<span class="line"><span style="color:#8FBCBB">    x0</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#B48EAD">0</span><span style="color:#81A1C1">&#125;</span><span style="color:#8FBCBB"> x2</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#B48EAD">600</span><span style="color:#81A1C1">&#125;</span><span style="color:#8FBCBB"> y0</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#B48EAD">50</span><span style="color:#81A1C1">&#125;</span><span style="color:#8FBCBB"> y2</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#B48EAD">50</span><span style="color:#81A1C1">&#125;</span><span style="color:#8FBCBB"> stroke</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">Tomato</span><span style="color:#ECEFF4">"</span><span style="color:#D8DEE9FF"> </span></span>
<span class="line"><span style="color:#8FBCBB">    strokeWidth</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#B48EAD">20</span><span style="color:#81A1C1">&#125;</span><span style="color:#8FBCBB"> strokeDashArray</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">0 25 0 25 0 25</span><span style="color:#ECEFF4">"</span><span style="color:#8FBCBB"> delay</span><span style="color:#ECEFF4">=</span><span style="color:#B48EAD">0</span><span style="color:#8FBCBB"> duration</span><span style="color:#ECEFF4">=</span><span style="color:#B48EAD">3000</span><span style="color:#8FBCBB"> &#123;</span><span style="color:#D8DEE9">time</span><span style="color:#8FBCBB">&#125;</span></span>
<span class="line"><span style="color:#81A1C1">  /></span></span>
<span class="line"><span style="color:#81A1C1">  &#x3C;</span><span style="color:#8FBCBB">Line</span><span style="color:#D8DEE9FF"> </span></span>
<span class="line"><span style="color:#8FBCBB">    x0</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#B48EAD">0</span><span style="color:#81A1C1">&#125;</span><span style="color:#8FBCBB"> x2</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#B48EAD">600</span><span style="color:#81A1C1">&#125;</span><span style="color:#8FBCBB"> y0</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#B48EAD">20</span><span style="color:#81A1C1">&#125;</span><span style="color:#8FBCBB"> y2</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#B48EAD">30</span><span style="color:#81A1C1">&#125;</span><span style="color:#8FBCBB"> stroke</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">MediumSeaGreen</span><span style="color:#ECEFF4">"</span><span style="color:#D8DEE9FF"> </span></span>
<span class="line"><span style="color:#8FBCBB">    strokeWidth</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#B48EAD">20</span><span style="color:#81A1C1">&#125;</span><span style="color:#8FBCBB"> strokeDashArray</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">0 0 50 0 25 50 25</span><span style="color:#ECEFF4">"</span><span style="color:#8FBCBB"> delay</span><span style="color:#ECEFF4">=</span><span style="color:#B48EAD">0</span><span style="color:#8FBCBB"> duration</span><span style="color:#ECEFF4">=</span><span style="color:#B48EAD">4000</span><span style="color:#8FBCBB"> &#123;</span><span style="color:#D8DEE9">time</span><span style="color:#8FBCBB">&#125;</span></span>
<span class="line"><span style="color:#81A1C1">  /></span></span>
<span class="line"><span style="color:#81A1C1">&#x3C;/svg></span></span></code></pre>`);var Ws=a(a(as,!0)),Ms=a(a(Ws,!0));a(a(Ms,!0)),S(l,y),ys()}export{ka as default,va as metadata};
