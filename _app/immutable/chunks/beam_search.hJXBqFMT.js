import{a as J,t as he,n as oe}from"./disclose-version.BFhNmyvO.js";import{ab as me,k as ge,a6 as pe,p as _e,av as _,s as m,w as be,t as F,J as n,g as e,e as ve,f as w,r as y,D as we}from"./runtime.6XPVmw07.js";import{d as ye,s as te}from"./render.CIVx1IxL.js";import{e as re,i as ie}from"./each.BrNH79d_.js";import{r as O,s as x}from"./attributes.CyJ1nIoY.js";import{s as xe}from"./class.B6EpSWng.js";import{b as Z}from"./input.DCRdV7WR.js";import{p as A}from"./proxy.BX94T_fX.js";const ke=[];function Se(r,a=!1){return P(r,new Map,"",ke)}function P(r,a,d,b,g=null){if(typeof r=="object"&&r!==null){var s=a.get(r);if(s!==void 0)return s;if(r instanceof Map)return new Map(r);if(r instanceof Set)return new Set(r);if(me(r)){var c=Array(r.length);a.set(r,c),g!==null&&a.set(g,c);for(var v=0;v<r.length;v+=1){var S=r[v];v in r&&(c[v]=P(S,a,d,b))}return c}if(ge(r)===pe){c={},a.set(r,c),g!==null&&a.set(g,c);for(var l in r)c[l]=P(r[l],a,d,b);return c}if(r instanceof Date)return structuredClone(r);if(typeof r.toJSON=="function")return P(r.toJSON(),a,d,b,r)}if(r instanceof EventTarget)return r;try{return structuredClone(r)}catch{return r}}const Ce={layout:"post",title:"Beam search nearest neighbors",summary:"A visualization of my favorite algorithm",date:"2015-12-28T00:00:00.000Z",updated:"2025-03-12T00:00:00.000Z"};function Ae(r,a,d){a[e(d)]()}var Me=oe("<circle></circle>"),Ie=oe('<line width="3" stroke="grey"></line>'),Pe=he('<p>A common problem is finding the nearest neighbors of a given object in some search space. <a href="https://en.wikipedia.org/wiki/Beam_search" rel="nofollow">Beam search</a> is an “anytime” heuristic search algorithm which very efficiently accomplishes this.</p> <p>Imagine we have a set of N nodes, each randomly “closest” (connected by an edge) to n other nodes. The algorithm works as follows:</p> <ol><li>Pick a node; paint it red.</li> <li>Paint its neighbors grey. Also paint the neighbors for each of those neighbors.</li> <li>“Fix” the edges of the red node by connecting it to the closest of these grey nodes.</li> <li>Repeat for each node.</li></ol> <p>Click to proceed with the algorithm: <button> </button></p> <div class="flex"><div>Number of nodes: <input class="w-8 text-blue-500"></div> <div>Number of neighbors to find: <input class="w-8 text-blue-500"></div> <div> <input class="w-8 text-blue-500"></div></div> <div class="w-full flex justify-center mt-12 mb-32"><svg class="w-full mx-auto" viewBox="0 0 1000 300"><!><!></svg></div>',1);function De(r,a){_e(a,!0);let d=_(50),b=_(3),g=_(75),s=_(void 0);const c=1e3,v=300;let S=_(!1),l=_(A({})),R=we(()=>{const t=[];for(const i in e(l)){const o=parseInt(i),p=e(s)[o];e(l)[i].forEach(u=>{const C=e(s)[u];t.push([p,C])})}return t}),h=_(1e5),M=_(0),G,k=_("Initialize random edges"),ne={"Initialize random edges":()=>{H(),n(k,"Solve quickly")},"Solve quickly":()=>{G=Se(e(l)),le(),n(k,"Wait, slow that down")},"Wait, slow that down":()=>{n(l,A(G)),ce(),n(k,"Wow cool")},"Wow cool":()=>{n(k,"Start over")},"Start over":()=>{n(l,A({})),z(),n(k,"Initialize random edges")}};function z(){n(s,A(new Array(e(d))));for(var t=0;t<e(d);++t)e(s)[t]={x:.1*c+.9*c*Math.random(),y:.05*v+.9*v*Math.random(),r:3,color:"black"}}z();function H(){n(l,A({})),e(s).forEach((t,i)=>{let o=[];ae(e(s),e(b)).forEach(p=>{o.push(p)}),e(l)[i]=o})}function se(t){return Array.from({length:t},(i,o)=>o)}function ae(t,i){return[...se(t.length)].sort(()=>.5-Math.random()).slice(0,i)}function le(){n(M,0);for(let t=0;t<e(g);t++)K(!0)}function ce(){n(S,!0),n(M,0);let t=0;function i(){t<e(g)?(K(),t++,setTimeout(i,250)):n(S,!1)}i()}function K(t){n(h,A(e(h)>=e(d)-1?0:e(h)+1)),t||T(e(h),{color:"red",r:10}),n(M,e(M)+1);let i=e(l)[e(h)]||[],o=[...new Set(i.flatMap(f=>e(l)[f]||[]).filter(f=>f!==e(h)&&!i.includes(f)))],p=[...i,...o],u=p.map(f=>(t||(T(f,{color:"grey",r:5}),L(e(h),{color:"black",r:3},50)),fe(e(s)[f],e(s)[e(h)]))),C=Array.from({length:u.length},(f,D)=>D).sort((f,D)=>u[f]<u[D]?1:-1).slice(0,e(b));e(l)[e(h)]=C.map(f=>p[f]),t||L(e(h),{color:"black",r:3},100)}function T(t,i){e(s)[t]={...e(s)[t],...i}}function L(t,i,o){setTimeout(()=>{T(t,i)},o)}function fe(t,i){let o=0;return o+=Math.pow(t.x-i.x,2),o+=Math.pow(t.y-i.y,2),1/(1+Math.sqrt(o))}var Q=Pe(),B=m(be(Q),6),I=m(w(B));I.__click=[Ae,ne,k];var de=w(I,!0);y(I),y(B);var E=m(B,2),N=w(E),W=m(w(N));O(W),W.__change=z,y(N);var j=m(N,2),q=m(w(j));O(q),q.__change=H,y(j);var U=m(j,2),V=w(U),X=m(V);O(X),y(U),y(E);var Y=m(E,2),$=w(Y),ee=w($);re(ee,17,()=>e(s),ie,(t,i)=>{var o=Me();F(()=>{x(o,"cx",e(i).x),x(o,"cy",e(i).y),x(o,"r",e(i).r),x(o,"fill",e(i).color)}),J(t,o)});var ue=m(ee);re(ue,17,()=>e(R),ie,(t,i)=>{let o=()=>e(i)[0],p=()=>e(i)[1];var u=Ie();F(()=>{x(u,"x1",o().x),x(u,"x2",p().x),x(u,"y1",o().y),x(u,"y2",p().y)}),J(t,u)}),y($),y(Y),F(()=>{xe(I,`px-2 py-1 text-white ${(e(S)?"bg-gray-400":"bg-blue-500 hover:bg-blue-600")??""} rounded  focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 inline-flex items-center`),I.disabled=e(S),te(de,e(k)),te(V,`Iterations: ${e(M)??""} / `)}),Z(W,()=>e(d),t=>n(d,t)),Z(q,()=>e(b),t=>n(b,t)),Z(X,()=>e(g),t=>n(g,t)),J(r,Q),ve()}ye(["click","change"]);export{De as default,Ce as metadata};
