import{a as t,t as i}from"./disclose-version.BNO5E3CA.js";import"./legacy.BVZN0Inh.js";import{o as a}from"./runtime.CUXqFQnj.js";const p={layout:"post",title:"noledge",date:"2020-03-16T00:00:00.000Z"};var l=i('<p>I have a new project called <a href="https://github.com/wrgoldstein/noledge" rel="nofollow">noledge</a> which is a way of tackling the <a href="https://medium.com/airbnb-engineering/scaling-knowledge-at-airbnb-875d73eff091" rel="nofollow">knowledge sharing</a> problem. Similar projects include:</p> <ul><li><a href="https://github.com/airbnb/knowledge-repo" rel="nofollow">knowledge-repo</a></li> <li><a href="http://kyso.io" rel="nofollow">kyso.io</a></li> <li><a href="https://github.com/fastai/fastpages" rel="nofollow">fastpages</a></li></ul> <p><strong>2025 note</strong>: all of the above are now defunct ðŸ˜…</p> <p>My reasons for making one myself are:</p> <ul><li>knowledge-repo is no longer actively supported and is a strange developer experience. Iâ€™m told no one at Airbnb uses it.</li> <li>kyso is kind of a weird user experience. An entire folder or repository is considered a single post, and thereâ€™s this huge visual emphasis on a community feed. My use case is for one repo with multiple notebook files that should be browsable.</li> <li>fastpages seems really nice, but itâ€™s based on github pages so itâ€™s not a good solution for internal knowledge sharing (github pages canâ€™t be private).</li></ul> <p>Its features are:</p> <ul><li>Authenticate through google and limit to only users from a certain domain.</li> <li>Automatically convert .ipynb files to attractive html pages with the ability to hide code</li> <li>Automatically read posts from a github repository</li> <li>Search posts by title or author</li> <li>Scan posts by date or through a directory structure</li></ul> <p>One killer feature Iâ€™d love to add would be the ability to seamlessly include <a href="https://www.streamlit.io/" rel="nofollow">streamlit</a> applications as postsâ€” individual posts would be interactive, or a post could also serve as a dashboard, which would be so, so awesome. But after a couple of hours of digging into this, I donâ€™t think its very practical with the way streamlit is designed right now (an individual server must be spun up for each page / application), and the client and server seem quite tightly coupled.</p>',1);function d(e){var o=l();a(14),t(e,o)}export{d as default,p as metadata};
