import{a as i,t as d}from"./disclose-version.BFhNmyvO.js";import"./legacy.Hbd-2b9r.js";import{s,w as D,o as h}from"./runtime.6XPVmw07.js";import{h as n}from"./html.A3LTe6ay.js";const u={layout:"post",title:"Phoenix and RabbitMQ",date:"2017-02-20T00:00:00.000Z"};var B=d('<p>Last post I talked about building a high throughput, highly available analytics backend. I’m not going to do a thorough tutorial here, just identify some steps in getting set up and a few things I learned.</p> <h2>Getting set up</h2> <p>I installed RabbitMQ through <code>brew</code>, and Phoenix / Elixir from the Phoenix homepage. Starting the RabbitMQ server was as simple as</p> <!> <p>and getting a Phoenix app going was easy too (I called my app <code>frequency</code>; it’s an Artsy tradition to name applications after physics terms):</p> <!> <p>We just want a pure phoenix API, so we’ll leave out <code>brunch</code> (the build tool), <code>ecto</code> (the ActiveRecord equivalent), and all of the <code>html</code> support and templating we would need if we wanted our app to have a front-end.</p> <p>The <code>mix.exs</code> file defines the application’s dependencies as follows (also add these to your <code>applications</code> method):</p> <!> <h2>Receiving calls and publishing messages</h2> <p>Under <code>web/router.ex</code> we add a single <code>POST</code> route:</p> <!> <p>In that route we reference the <code>TracksController</code> which doesn’t exist yet, so under <code>web/controllers</code> let’s create <code>tracks_controller.ex</code> with the following body:</p> <!> <p>And you’ll see that in turn defers to a <code>Frequency.Worker</code> that we’ll have to make. In <code>lib</code> we’ll make <code>worker.ex</code> which looks like</p> <!> <p>This worker publishes all messages to a RabbitMQ channel: It defines a single GenServer with the name <code>publisher</code> which we’ll set up to start under the same <a href="https://hexdocs.pm/elixir/Supervisor.html" rel="nofollow">supervisor</a> as our Frequency application (we’ll do this in a minute). The GenServer exposes a single method, <code>:publish</code>, which drops the message into a channel defined by the <code>:init</code> method. Finally, in <code>lib/frequency.ex</code>, update the children of our process to include our new worker.</p> <!> <p>Halfway there.</p> <h2>Receiving messages from RabbitMQ and posting them to S3</h2> <p>Under <code>lib</code>, we’ll create a <code>receiver.ex</code> which reads messages off the RabbitMQ channel, adds them to a list, and then every 1,000 messages will encode those messages as a JSON file and upload them to S3 using ExAWS (you’ll need to add the variables <code>AWS_ACCESS_KEY_ID</code> and <code>AWS_SECRET_ACCESS_KEY</code> to your environment).</p> <!> <p>Finally, we can string it all together with <code>mix phoenix.server</code> in one terminal window, and <code>iex -S mix</code> in another, and in the <code>iex</code> pane run</p> <!> <p>And all that’s left is hammering our API with <code>POST</code> requests, which I elected to do in Ruby:</p> <!> <p>Sit back and watch your API soak up thousands of concurrent requests without a sweat.</p>',1);function w(y){var a=B(),l=s(D(a),6);n(l,()=>'<pre class="shiki nord" style="background-color:#2e3440ff;color:#d8dee9ff" tabindex="0"><code><span class="line"><span>/usr/local/sbin/rabbitmq</span></span></code></pre>');var o=s(l,4);n(o,()=>'<pre class="shiki nord" style="background-color:#2e3440ff;color:#d8dee9ff" tabindex="0"><code><span class="line"><span>mix phoenix.new frequency --no-brunch --no-ecto --no-html</span></span></code></pre>');var p=s(o,6);n(p,()=>`<pre class="shiki nord" style="background-color:#2e3440ff;color:#d8dee9ff" tabindex="0"><code><span class="line"><span style="color:#81A1C1">  defp</span><span style="color:#88C0D0"> deps</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#ECEFF4">    [&#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">phoenix</span><span style="color:#ECEFF4">,</span><span style="color:#ECEFF4"> "</span><span style="color:#A3BE8C">~> 1.2.1</span><span style="color:#ECEFF4">"</span><span style="color:#ECEFF4">&#125;,</span></span>
<span class="line"><span style="color:#ECEFF4">     &#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">phoenix_pubsub</span><span style="color:#ECEFF4">,</span><span style="color:#ECEFF4"> "</span><span style="color:#A3BE8C">~> 1.0</span><span style="color:#ECEFF4">"</span><span style="color:#ECEFF4">&#125;,</span></span>
<span class="line"><span style="color:#ECEFF4">     &#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">gettext</span><span style="color:#ECEFF4">,</span><span style="color:#ECEFF4"> "</span><span style="color:#A3BE8C">~> 0.11</span><span style="color:#ECEFF4">"</span><span style="color:#ECEFF4">&#125;,</span></span>
<span class="line"><span style="color:#ECEFF4">     &#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">cowboy</span><span style="color:#ECEFF4">,</span><span style="color:#ECEFF4"> "</span><span style="color:#A3BE8C">~> 1.0</span><span style="color:#ECEFF4">"</span><span style="color:#ECEFF4">&#125;,</span></span>
<span class="line"><span style="color:#ECEFF4">     &#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">amqp</span><span style="color:#ECEFF4">,</span><span style="color:#ECEFF4"> "</span><span style="color:#A3BE8C">~> 0.2.0-pre.1</span><span style="color:#ECEFF4">"</span><span style="color:#ECEFF4">&#125;,</span><span style="color:#616E88"> # https://github.com/pma/amqp/issues/28</span></span>
<span class="line"><span style="color:#ECEFF4">     &#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">briefly</span><span style="color:#ECEFF4">,</span><span style="color:#ECEFF4"> "</span><span style="color:#A3BE8C">~> 0.3</span><span style="color:#ECEFF4">"</span><span style="color:#ECEFF4">&#125;,</span></span>
<span class="line"><span style="color:#ECEFF4">     &#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">ex_aws</span><span style="color:#ECEFF4">,</span><span style="color:#ECEFF4"> "</span><span style="color:#A3BE8C">~> 1.0</span><span style="color:#ECEFF4">"</span><span style="color:#ECEFF4">&#125;,</span></span>
<span class="line"><span style="color:#ECEFF4">     &#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">hackney</span><span style="color:#ECEFF4">,</span><span style="color:#ECEFF4"> "</span><span style="color:#A3BE8C">~> 1.6</span><span style="color:#ECEFF4">"</span><span style="color:#ECEFF4">&#125;</span></span>
<span class="line"><span style="color:#ECEFF4">    ]</span></span>
<span class="line"><span style="color:#81A1C1">  end</span></span></code></pre>`);var e=s(p,6);n(e,()=>`<pre class="shiki nord" style="background-color:#2e3440ff;color:#d8dee9ff" tabindex="0"><code><span class="line"><span style="color:#D8DEE9FF">  scope </span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">/api</span><span style="color:#ECEFF4">"</span><span style="color:#ECEFF4">,</span><span style="color:#8FBCBB"> Frequency</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#D8DEE9FF">    pipe_through </span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">api</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF">    post </span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">/t</span><span style="color:#ECEFF4">"</span><span style="color:#ECEFF4">,</span><span style="color:#8FBCBB"> TracksController</span><span style="color:#ECEFF4">,</span><span style="color:#ECEFF4;font-weight:bold"> :</span><span style="color:#D8DEE9;font-weight:bold">index</span></span>
<span class="line"><span style="color:#81A1C1">  end</span></span></code></pre>`);var t=s(e,4);n(t,()=>`<pre class="shiki nord" style="background-color:#2e3440ff;color:#d8dee9ff" tabindex="0"><code><span class="line"><span style="color:#81A1C1">defmodule</span><span style="color:#8FBCBB;font-weight:bold"> Frequency</span><span style="color:#D8DEE9FF">.</span><span style="color:#8FBCBB">TracksController</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#81A1C1">  use</span><span style="color:#8FBCBB"> Frequency</span><span style="color:#ECEFF4">.</span><span style="color:#8FBCBB">Web</span><span style="color:#ECEFF4">,</span><span style="color:#ECEFF4;font-weight:bold"> :</span><span style="color:#D8DEE9;font-weight:bold">controller</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  def</span><span style="color:#88C0D0"> index</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">conn</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> params</span><span style="color:#ECEFF4">)</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#ECEFF4">    &#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">ok</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> message</span><span style="color:#ECEFF4">&#125;</span><span style="color:#81A1C1"> =</span><span style="color:#8FBCBB"> Poison</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">encode</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">params</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#8FBCBB">    Frequency</span><span style="color:#ECEFF4">.</span><span style="color:#8FBCBB">Worker</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">publish</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">message</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#D8DEE9FF">    conn</span></span>
<span class="line"><span style="color:#81A1C1">     |></span><span style="color:#88C0D0"> text</span><span style="color:#ECEFF4">(</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">200</span><span style="color:#ECEFF4">"</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#81A1C1">  end</span></span>
<span class="line"><span style="color:#81A1C1">end</span></span></code></pre>`);var c=s(t,4);n(c,()=>`<pre class="shiki nord" style="background-color:#2e3440ff;color:#d8dee9ff" tabindex="0"><code><span class="line"><span style="color:#81A1C1">defmodule</span><span style="color:#8FBCBB;font-weight:bold"> Frequency</span><span style="color:#D8DEE9FF">.</span><span style="color:#8FBCBB">Worker</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#81A1C1">  use</span><span style="color:#8FBCBB"> GenServer</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88">  ## Client API</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  def</span><span style="color:#88C0D0"> start_link</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#8FBCBB">    GenServer</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">start_link</span><span style="color:#ECEFF4">(</span><span style="color:#81A1C1">__MODULE__</span><span style="color:#ECEFF4">,</span><span style="color:#ECEFF4;font-weight:bold"> :</span><span style="color:#D8DEE9;font-weight:bold">ok</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> name</span><span style="color:#ECEFF4">:</span><span style="color:#ECEFF4;font-weight:bold"> :</span><span style="color:#D8DEE9;font-weight:bold">publisher</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#81A1C1">  end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  def</span><span style="color:#88C0D0"> publish</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">message</span><span style="color:#ECEFF4">)</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#8FBCBB">    IO</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">puts</span><span style="color:#ECEFF4"> "</span><span style="color:#A3BE8C">handling cast.. </span><span style="color:#ECEFF4">"</span></span>
<span class="line"><span style="color:#8FBCBB">    GenServer</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">cast</span><span style="color:#ECEFF4">(</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">publisher</span><span style="color:#ECEFF4">,</span><span style="color:#ECEFF4"> &#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">publish</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> message</span><span style="color:#ECEFF4">&#125;)</span></span>
<span class="line"><span style="color:#81A1C1">  end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88">  ## Server Callbacks</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  def</span><span style="color:#88C0D0"> init</span><span style="color:#ECEFF4">(</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">ok</span><span style="color:#ECEFF4">)</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#ECEFF4">    &#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">ok</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> connection</span><span style="color:#ECEFF4">&#125;</span><span style="color:#81A1C1"> =</span><span style="color:#8FBCBB"> AMQP</span><span style="color:#ECEFF4">.</span><span style="color:#8FBCBB">Connection</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">open</span></span>
<span class="line"><span style="color:#ECEFF4">    &#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">ok</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> channel</span><span style="color:#ECEFF4">&#125;</span><span style="color:#81A1C1"> =</span><span style="color:#8FBCBB"> AMQP</span><span style="color:#ECEFF4">.</span><span style="color:#8FBCBB">Channel</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">open</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">connection</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#8FBCBB">    AMQP</span><span style="color:#ECEFF4">.</span><span style="color:#8FBCBB">Queue</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">declare</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">channel</span><span style="color:#ECEFF4">,</span><span style="color:#ECEFF4"> "</span><span style="color:#A3BE8C">tracks</span><span style="color:#ECEFF4">"</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#ECEFF4">    &#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">ok</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> %</span><span style="color:#ECEFF4">&#123;</span><span style="color:#D8DEE9FF">channel</span><span style="color:#ECEFF4">:</span><span style="color:#D8DEE9FF"> channel</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> connection</span><span style="color:#ECEFF4">:</span><span style="color:#D8DEE9FF"> connection</span><span style="color:#ECEFF4">&#125;</span><span style="color:#ECEFF4"> &#125;</span></span>
<span class="line"><span style="color:#81A1C1">  end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  def</span><span style="color:#88C0D0"> handle_cast</span><span style="color:#ECEFF4">(&#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">publish</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> message</span><span style="color:#ECEFF4">&#125;,</span><span style="color:#D8DEE9FF"> state</span><span style="color:#ECEFF4">)</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#8FBCBB">    AMQP</span><span style="color:#ECEFF4">.</span><span style="color:#8FBCBB">Basic</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">publish</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">state</span><span style="color:#ECEFF4">.</span><span style="color:#D8DEE9FF">channel</span><span style="color:#ECEFF4">,</span><span style="color:#ECEFF4"> ""</span><span style="color:#ECEFF4">,</span><span style="color:#ECEFF4"> "</span><span style="color:#A3BE8C">tracks</span><span style="color:#ECEFF4">"</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> message</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#ECEFF4">    &#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">noreply</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> state</span><span style="color:#ECEFF4">&#125;</span></span>
<span class="line"><span style="color:#81A1C1">  end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  def</span><span style="color:#88C0D0"> terminate</span><span style="color:#ECEFF4">(</span><span style="color:#616E88">_reason</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> state</span><span style="color:#ECEFF4">)</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#8FBCBB">    AMQP</span><span style="color:#ECEFF4">.</span><span style="color:#8FBCBB">Connection</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">close</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">state</span><span style="color:#ECEFF4">.</span><span style="color:#D8DEE9FF">connection</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#81A1C1">  end</span></span>
<span class="line"><span style="color:#81A1C1">end</span></span></code></pre>`);var r=s(c,4);n(r,()=>`<pre class="shiki nord" style="background-color:#2e3440ff;color:#d8dee9ff" tabindex="0"><code><span class="line"><span>children = [</span></span>
<span class="line"><span>      # Start the endpoint when the application starts</span></span>
<span class="line"><span>      supervisor(Frequency.Endpoint, []),</span></span>
<span class="line"><span>      worker(Frequency.Worker, []),</span></span>
<span class="line"><span>    ]</span></span></code></pre>`);var E=s(r,8);n(E,()=>`<pre class="shiki nord" style="background-color:#2e3440ff;color:#d8dee9ff" tabindex="0"><code><span class="line"><span style="color:#81A1C1">alias</span><span style="color:#8FBCBB"> ExAws</span><span style="color:#ECEFF4">.</span><span style="color:#8FBCBB">S3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">defmodule</span><span style="color:#8FBCBB"> Receiver</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#81A1C1">  def</span><span style="color:#88C0D0"> wait_for_messages</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#D8DEE9FF">    channel_name </span><span style="color:#81A1C1">=</span><span style="color:#ECEFF4"> "</span><span style="color:#A3BE8C">tracks</span><span style="color:#ECEFF4">"</span></span>
<span class="line"><span style="color:#ECEFF4">    &#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">ok</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> connection</span><span style="color:#ECEFF4">&#125;</span><span style="color:#81A1C1"> =</span><span style="color:#8FBCBB"> AMQP</span><span style="color:#ECEFF4">.</span><span style="color:#8FBCBB">Connection</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">open</span></span>
<span class="line"><span style="color:#ECEFF4">    &#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">ok</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> channel</span><span style="color:#ECEFF4">&#125;</span><span style="color:#81A1C1"> =</span><span style="color:#8FBCBB"> AMQP</span><span style="color:#ECEFF4">.</span><span style="color:#8FBCBB">Channel</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">open</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">connection</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#8FBCBB">    AMQP</span><span style="color:#ECEFF4">.</span><span style="color:#8FBCBB">Queue</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">declare</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">channel</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> channel_name</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#8FBCBB">    AMQP</span><span style="color:#ECEFF4">.</span><span style="color:#8FBCBB">Basic</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">consume</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">channel</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> channel_name</span><span style="color:#ECEFF4">,</span><span style="color:#81A1C1"> nil</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> no_ack</span><span style="color:#ECEFF4">:</span><span style="color:#81A1C1"> true</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#8FBCBB">    Agent</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">start_link</span><span style="color:#ECEFF4">(</span><span style="color:#81A1C1">fn</span><span style="color:#81A1C1"> -></span><span style="color:#ECEFF4"> []</span><span style="color:#81A1C1"> end</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> name</span><span style="color:#ECEFF4">:</span><span style="color:#ECEFF4;font-weight:bold"> :</span><span style="color:#D8DEE9;font-weight:bold">batcher</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#88C0D0">    _wait_for_messages</span><span style="color:#ECEFF4">()</span></span>
<span class="line"><span style="color:#81A1C1">  end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  defp</span><span style="color:#88C0D0"> push</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">value</span><span style="color:#ECEFF4">)</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#8FBCBB">    Agent</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">update</span><span style="color:#ECEFF4">(</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">batcher</span><span style="color:#ECEFF4">,</span><span style="color:#81A1C1"> fn</span><span style="color:#D8DEE9FF"> list </span><span style="color:#81A1C1">-></span><span style="color:#ECEFF4"> [</span><span style="color:#D8DEE9FF">value</span><span style="color:#81A1C1">|</span><span style="color:#D8DEE9FF">list</span><span style="color:#ECEFF4">]</span><span style="color:#81A1C1"> end</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#88C0D0">    flush_if_full</span><span style="color:#ECEFF4">()</span></span>
<span class="line"><span style="color:#81A1C1">  end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  defp</span><span style="color:#88C0D0"> flush</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#8FBCBB">    Agent</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">update</span><span style="color:#ECEFF4">(</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">batcher</span><span style="color:#ECEFF4">,</span><span style="color:#81A1C1"> fn</span><span style="color:#616E88"> _</span><span style="color:#81A1C1"> -></span><span style="color:#ECEFF4"> []</span><span style="color:#81A1C1"> end</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#81A1C1">  end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  defp</span><span style="color:#88C0D0"> full?</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#8FBCBB">    Agent</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">get</span><span style="color:#ECEFF4">(</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">batcher</span><span style="color:#ECEFF4">,</span><span style="color:#81A1C1"> fn</span><span style="color:#D8DEE9FF"> list </span><span style="color:#81A1C1">-></span><span style="color:#88C0D0"> length</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">list</span><span style="color:#ECEFF4">)</span><span style="color:#81A1C1"> ></span><span style="color:#B48EAD"> 1000</span><span style="color:#81A1C1"> end</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#81A1C1">  end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  defp</span><span style="color:#88C0D0"> make_key</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#D8DEE9FF">    rand </span><span style="color:#81A1C1">=</span><span style="color:#D8DEE9;font-weight:bold"> :crypto</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">strong_rand_bytes</span><span style="color:#ECEFF4">(</span><span style="color:#B48EAD">6</span><span style="color:#ECEFF4">)</span><span style="color:#81A1C1"> |></span><span style="color:#8FBCBB"> Base</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">url_encode64</span></span>
<span class="line"><span style="color:#D8DEE9FF">    now </span><span style="color:#81A1C1">=</span><span style="color:#8FBCBB"> DateTime</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">utc_now</span><span style="color:#81A1C1"> |></span><span style="color:#8FBCBB"> DateTime</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">to_string</span></span>
<span class="line"><span style="color:#ECEFF4">    "</span><span style="color:#A3BE8C">batch_</span><span style="color:#81A1C1">#&#123;</span><span style="color:#A3BE8C">now</span><span style="color:#81A1C1">&#125;</span><span style="color:#A3BE8C">_</span><span style="color:#81A1C1">#&#123;</span><span style="color:#A3BE8C">rand</span><span style="color:#81A1C1">&#125;</span><span style="color:#A3BE8C">.json</span><span style="color:#ECEFF4">"</span></span>
<span class="line"><span style="color:#81A1C1">  end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  defp</span><span style="color:#88C0D0"> write_and_upload</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">path</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> json</span><span style="color:#ECEFF4">)</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#8FBCBB">    File</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">write!</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">path</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> json</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#8FBCBB">    S3</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">put_object</span><span style="color:#ECEFF4">(</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">&#x3C;your-bucket></span><span style="color:#ECEFF4">"</span><span style="color:#ECEFF4">,</span><span style="color:#ECEFF4"> "</span><span style="color:#A3BE8C">frequency/</span><span style="color:#81A1C1">#&#123;</span><span style="color:#88C0D0">make_key</span><span style="color:#ECEFF4">()</span><span style="color:#81A1C1">&#125;</span><span style="color:#ECEFF4">"</span><span style="color:#ECEFF4">,</span><span style="color:#8FBCBB"> File</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">read!</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">path</span><span style="color:#ECEFF4">))</span><span style="color:#81A1C1"> |></span><span style="color:#8FBCBB"> ExAws</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">request</span></span>
<span class="line"><span style="color:#81A1C1">  end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  defp</span><span style="color:#88C0D0"> flush_if_full</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#81A1C1">    if</span><span style="color:#88C0D0"> full?</span><span style="color:#ECEFF4">()</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#D8DEE9FF">      l </span><span style="color:#81A1C1">=</span><span style="color:#8FBCBB"> Agent</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">get</span><span style="color:#ECEFF4">(</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">batcher</span><span style="color:#ECEFF4">,</span><span style="color:#81A1C1"> fn</span><span style="color:#D8DEE9FF"> list </span><span style="color:#81A1C1">-></span><span style="color:#D8DEE9FF"> list </span><span style="color:#81A1C1">end</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#ECEFF4">      &#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">ok</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> path</span><span style="color:#ECEFF4">&#125;</span><span style="color:#81A1C1"> =</span><span style="color:#8FBCBB"> Briefly</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">create</span></span>
<span class="line"><span style="color:#ECEFF4">      &#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">ok</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> json</span><span style="color:#ECEFF4">&#125;</span><span style="color:#81A1C1"> =</span><span style="color:#8FBCBB"> Poison</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">encode</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">l</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#88C0D0">      write_and_upload</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">path</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> json</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#88C0D0">      flush</span><span style="color:#ECEFF4">()</span></span>
<span class="line"><span style="color:#81A1C1">    end</span></span>
<span class="line"><span style="color:#81A1C1">  end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  defp</span><span style="color:#88C0D0"> _wait_for_messages</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#81A1C1">    receive</span><span style="color:#81A1C1"> do</span></span>
<span class="line"><span style="color:#ECEFF4">      &#123;</span><span style="color:#ECEFF4;font-weight:bold">:</span><span style="color:#D8DEE9;font-weight:bold">basic_deliver</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9FF"> payload</span><span style="color:#ECEFF4">,</span><span style="color:#616E88"> _meta</span><span style="color:#ECEFF4">&#125;</span><span style="color:#81A1C1"> -></span></span>
<span class="line"><span style="color:#88C0D0">        push</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">payload</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#8FBCBB">        IO</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">puts</span><span style="color:#ECEFF4"> "</span><span style="color:#A3BE8C">received a message!</span><span style="color:#ECEFF4">"</span></span>
<span class="line"><span style="color:#88C0D0">        _wait_for_messages</span><span style="color:#ECEFF4">()</span></span>
<span class="line"><span style="color:#81A1C1">    end</span></span>
<span class="line"><span style="color:#81A1C1">  end</span></span>
<span class="line"><span style="color:#81A1C1">end</span></span></code></pre>`);var F=s(E,4);n(F,()=>'<pre class="shiki nord" style="background-color:#2e3440ff;color:#d8dee9ff" tabindex="0"><code><span class="line"><span style="color:#8FBCBB">Receiver</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">wait_for_messages</span></span></code></pre>');var C=s(F,4);n(C,()=>`<pre class="shiki nord" style="background-color:#2e3440ff;color:#d8dee9ff" tabindex="0"><code><span class="line"><span style="color:#81A1C1">require</span><span style="color:#ECEFF4"> '</span><span style="color:#A3BE8C">net/http</span><span style="color:#ECEFF4">'</span></span>
<span class="line"><span style="color:#D8DEE9FF">uri </span><span style="color:#81A1C1">=</span><span style="color:#D8DEE9"> URI</span><span style="color:#ECEFF4">(</span><span style="color:#ECEFF4">'</span><span style="color:#A3BE8C">127.0.0.1:4000/api/t</span><span style="color:#ECEFF4">'</span><span style="color:#ECEFF4">)</span></span>
<span class="line"><span style="color:#B48EAD">30</span><span style="color:#ECEFF4">.</span><span style="color:#D8DEE9FF">times </span><span style="color:#81A1C1">do</span></span>
<span class="line"><span style="color:#B48EAD">  1000</span><span style="color:#ECEFF4">.</span><span style="color:#D8DEE9FF">times </span><span style="color:#81A1C1">do</span></span>
<span class="line"><span style="color:#8FBCBB">    Thread</span><span style="color:#ECEFF4">.</span><span style="color:#81A1C1">new</span><span style="color:#ECEFF4"> &#123;</span><span style="color:#8FBCBB">Net</span><span style="color:#ECEFF4">::</span><span style="color:#8FBCBB">HTTP</span><span style="color:#ECEFF4">.</span><span style="color:#D8DEE9FF">post_form</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9FF">uri</span><span style="color:#ECEFF4">,</span><span style="color:#ECEFF4"> '</span><span style="color:#A3BE8C">event</span><span style="color:#ECEFF4">'</span><span style="color:#ECEFF4"> =></span><span style="color:#ECEFF4"> '</span><span style="color:#A3BE8C">sent_a_message</span><span style="color:#ECEFF4">'</span><span style="color:#ECEFF4">,</span><span style="color:#ECEFF4"> '</span><span style="color:#A3BE8C">user_id</span><span style="color:#ECEFF4">'</span><span style="color:#ECEFF4"> =></span><span style="color:#ECEFF4"> '</span><span style="color:#A3BE8C">xyz</span><span style="color:#ECEFF4">'</span><span style="color:#ECEFF4">)</span><span style="color:#ECEFF4"> &#125;</span></span>
<span class="line"><span style="color:#81A1C1">  end</span></span>
<span class="line"><span style="color:#88C0D0">  sleep</span><span style="color:#ECEFF4">(.</span><span style="color:#B48EAD">5</span><span style="color:#ECEFF4">)</span><span style="color:#616E88"> # ruby can only spawn so many threads</span></span>
<span class="line"><span style="color:#81A1C1">end</span></span></code></pre>`),h(2),i(y,a)}export{w as default,u as metadata};
