import{a,t as o}from"./disclose-version.BNO5E3CA.js";import"./legacy.BVZN0Inh.js";import{o as r}from"./runtime.CUXqFQnj.js";const h={layout:"post",title:"svelte-charts",date:"2020-01-16T00:00:00.000Z"};var l=o('<p>In some of my recent projects I’ve been using the very good <a href="https://www.chartjs.org/" rel="nofollow">chart.js</a> library, but I’ve always wanted to have a little more control over my charts. I planned to implement them in d3.js eventually, but I recently read Paul Sweeney on <a href="https://medium.com/@PepsRyuu/why-i-no-longer-use-d3-js-b8288f306c9a" rel="nofollow">why he doesn’t use d3 anymore</a> and the <a href="https://medium.com/@mbostock/why-you-should-use-d3-ae63c276e958" rel="nofollow">counterpunch</a> from Mike Bostock and decided to do exactly as Mike suggests- use d3, but only for the fiddly bits I don’t want to calculate myself (like nice tick marks) and not for DOM selection and mutation.</p> <p>A goal is to create a charting element like Tableau or Looker that allows for quite a bit of easy configuring, for example easily toggling from a bar chart to a line chart.</p> <p>It’s still very early days, but it felt worth mentioning, especially as I haven’t really blogged about Svelte at all. Svelte is a delight to work with, I’m having a lot of fun with it.</p> <p>The code is <a href="https://github.com/wrgoldstein/svelte-charts/" rel="nofollow">here</a>.</p> <p><strong>Update:</strong> I didn’t end up pursuing this library further, but in 2025 I use d3 even less now. For example my <a href="/resume">resume</a> is a d3 free gant chart.</p>',1);function d(e){var t=l();r(8),a(e,t)}export{d as default,h as metadata};
