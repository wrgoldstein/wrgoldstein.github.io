import{h as I,c as _,a as R,q as Y,p as L,v as w,s as P,w as H,j as f,l as d,k as a,m as A,t as m,n as u,x as O}from"../chunks/disclose-version.DB-ZYhM8.js";import{f as W,j as G,q as J,M as S,t as M,w as V,v as q,s as h,g as F,l as v,N as b}from"../chunks/runtime.BdSSc9HG.js";import{a as z,r as x,s as K}from"../chunks/attributes.Ci0-93bw.js";import{o as Q,i as U,p as X}from"../chunks/index-client.CPXIeMAy.js";function Z(s,o,n,l,r){var e=s,t="",y;W(()=>{t!==(t=o())&&(y&&(J(y),y=null),t!==""&&(y=G(()=>{if(I){_.data;for(var p=R(),i=p;p!==null&&(p.nodeType!==8||p.data!=="");)i=p,p=p.nextSibling;if(p===null)throw Y(),L;w(_,i),e=P(p);return}var C=t+"",c=H(C);w(c.firstChild,c.lastChild),e.before(c)})))})}function ss(s,o,n,l=n){s.addEventListener(o,n);const r=s.__on_r;r?s.__on_r=()=>{r(),l()}:s.__on_r=l,z()}function k(s,o,n){ss(s,"input",()=>{n($(s)?j(s.value):s.value)}),S(()=>{var l=o();if(I&&s.defaultValue!==s.value){n(s.value);return}$(s)&&l===j(s.value)||s.type==="date"&&!l&&!s.value||(s.value=l??"")})}function $(s){var o=s.type;return o==="number"||o==="range"}function j(s){return s===""?null:+s}var as=m('<div class="flex gap-3 m-2"><div>Amplitude <input type="range"></div> <div>Frequency <input type="range" min="1" max="10" step="0.2"></div></div> <svg viewBox="0 -100 1000 400" class="mx-auto mt-6 w-3/4"><path fill="none" stroke="maroon" stroke-width="4" stroke-linecap="round"></path></svg>',1);function ns(s,o){M(o,!0);let n=v(50),l=v(1),r=0;const e=[...Array(1e3).keys()].map(E=>E/50);let t=b(()=>e.map(E=>F(n)*Math.sin(2*Math.PI*F(l)*E+r))),y=b(()=>"M"+e.map((E,N)=>`${E*100} ${F(t)[N]+F(n)}`).join("L"));var p=as(),i=f(p),C=d(i),c=a(d(C));x(c),u(C);var D=a(a(C,!0)),B=a(d(D));x(B),u(D),u(i);var g=a(a(i,!0)),T=d(g);u(g),V(()=>K(T,"d",F(y))),k(c,()=>F(n),E=>h(n,E)),k(B,()=>F(l),E=>h(l,E)),A(s,p),q()}var ls=m('<a href="/">back</a>');function os(s,o){M(o,!0);let n=v(void 0);Q(()=>{h(n,X(window.location.pathname))});var l=O(),r=f(l);U(r,()=>{var e;return(e=F(n))==null?void 0:e.startsWith("/blog")},e=>{var t=ls();A(e,t)}),A(s,l),q()}var ps=m('<!> <h1>New blog</h1> <p>I’ve got a new blog! Well, the same blog, but with some upgrades I’d been thinking about for the last couple of years that I hadn’t gotten around to yet.</p> <p>The old blog was a classic <a href="https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll" rel="nofollow">Github Pages Jekyll blog</a>, which was totally fine for what it was, but it was missing some things I really wanted.</p> <p>The main missing thing is that the old blog was built on classic markdown, which meant it supported javascript inside <code>&lt;script&gt;</code> tags, and markdown text, but the two couldn’t interact. The new idea is to back the blog up with a more modern component engine (<a href="https://svelte.dev/" rel="nofollow">svelte</a>), which will let me do interactive things more easily.</p> <p>Here’s an example. Change the amplitude or the frequency of this sinoidal function and it will update in real time:</p> <!> <p>Not impossible to do in vanilla javascript of course, but the entire code for this is just:</p> <br> <!> <br> <p>The other thing to note with this blog setup is its really…raw. All the styling is done by hand (with <a href="https://tailwindcss.com/" rel="nofollow">tailwind</a>), no frameworks or templates. I think it will be fun to play with this over time.</p>',1);function Es(s){var o=ps(),n=f(o);os(n,{});var l=a(a(n,!0)),r=a(a(l,!0)),e=a(a(r,!0)),t=a(a(e,!0)),y=a(a(t,!0)),p=a(a(y,!0));ns(p,{});var i=a(a(p,!0)),C=a(a(i,!0)),c=a(a(C,!0));Z(c,()=>`<pre class="shiki nord" style="background-color:#2e3440ff;color:#d8dee9ff" tabindex="0"><code><span class="line"><span style="color:#81A1C1">&#x3C;script></span></span>
<span class="line"><span style="color:#81A1C1">  let</span><span style="color:#D8DEE9"> A</span><span style="color:#81A1C1"> =</span><span style="color:#81A1C1"> $</span><span style="color:#88C0D0">state</span><span style="color:#D8DEE9FF">(</span><span style="color:#B48EAD">50</span><span style="color:#D8DEE9FF">) </span><span style="color:#616E88">// amplitude</span></span>
<span class="line"><span style="color:#81A1C1">  let</span><span style="color:#D8DEE9"> f</span><span style="color:#81A1C1"> =</span><span style="color:#81A1C1"> $</span><span style="color:#88C0D0">state</span><span style="color:#D8DEE9FF">(</span><span style="color:#B48EAD">1</span><span style="color:#D8DEE9FF">) </span><span style="color:#616E88">// ordinary frequency</span></span>
<span class="line"><span style="color:#81A1C1">  let</span><span style="color:#D8DEE9"> p</span><span style="color:#81A1C1"> =</span><span style="color:#81A1C1"> $</span><span style="color:#88C0D0">state</span><span style="color:#D8DEE9FF">(</span><span style="color:#B48EAD">0</span><span style="color:#D8DEE9FF">) </span><span style="color:#616E88">// phase</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  const</span><span style="color:#D8DEE9"> x</span><span style="color:#81A1C1"> =</span><span style="color:#D8DEE9FF"> [</span><span style="color:#81A1C1">...</span><span style="color:#88C0D0">Array</span><span style="color:#D8DEE9FF">(</span><span style="color:#B48EAD">1000</span><span style="color:#D8DEE9FF">)</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">keys</span><span style="color:#D8DEE9FF">()]</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">map</span><span style="color:#D8DEE9FF">(</span><span style="color:#D8DEE9">i</span><span style="color:#81A1C1"> =></span><span style="color:#D8DEE9"> i</span><span style="color:#81A1C1"> /</span><span style="color:#B48EAD"> 50</span><span style="color:#D8DEE9FF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  let</span><span style="color:#D8DEE9"> Y</span><span style="color:#81A1C1"> =</span><span style="color:#81A1C1"> $</span><span style="color:#88C0D0">derived</span><span style="color:#D8DEE9FF">(</span></span>
<span class="line"><span style="color:#D8DEE9">    x</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">map</span><span style="color:#D8DEE9FF">(</span><span style="color:#D8DEE9">t0</span><span style="color:#81A1C1"> =></span><span style="color:#D8DEE9"> A</span><span style="color:#81A1C1">*</span><span style="color:#D8DEE9">Math</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">sin</span><span style="color:#D8DEE9FF">(</span><span style="color:#B48EAD">2</span><span style="color:#81A1C1">*</span><span style="color:#D8DEE9">Math</span><span style="color:#ECEFF4">.</span><span style="color:#D8DEE9">PI</span><span style="color:#81A1C1">*</span><span style="color:#D8DEE9">f</span><span style="color:#81A1C1">*</span><span style="color:#D8DEE9">t0</span><span style="color:#81A1C1"> +</span><span style="color:#D8DEE9"> p</span><span style="color:#D8DEE9FF">))</span></span>
<span class="line"><span style="color:#D8DEE9FF">  )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">  let</span><span style="color:#D8DEE9"> d</span><span style="color:#81A1C1"> =</span><span style="color:#81A1C1"> $</span><span style="color:#D8DEE9">derived</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">by</span><span style="color:#D8DEE9FF">(</span><span style="color:#ECEFF4">()</span><span style="color:#81A1C1"> =></span><span style="color:#ECEFF4"> &#123;</span></span>
<span class="line"><span style="color:#81A1C1">    return</span><span style="color:#ECEFF4"> "</span><span style="color:#A3BE8C">M</span><span style="color:#ECEFF4">"</span><span style="color:#81A1C1"> +</span><span style="color:#D8DEE9"> x</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">map</span><span style="color:#D8DEE9FF">(</span><span style="color:#ECEFF4">(</span><span style="color:#D8DEE9">x0</span><span style="color:#ECEFF4">,</span><span style="color:#D8DEE9"> i</span><span style="color:#ECEFF4">)</span><span style="color:#81A1C1"> =></span><span style="color:#ECEFF4"> &#96;</span><span style="color:#81A1C1">$&#123;</span><span style="color:#D8DEE9">x0</span><span style="color:#81A1C1"> *</span><span style="color:#B48EAD"> 100</span><span style="color:#81A1C1">&#125;</span><span style="color:#81A1C1"> $&#123;</span><span style="color:#D8DEE9">Y</span><span style="color:#ECEFF4">[</span><span style="color:#D8DEE9">i</span><span style="color:#ECEFF4">]</span><span style="color:#81A1C1"> +</span><span style="color:#D8DEE9"> A</span><span style="color:#81A1C1">&#125;</span><span style="color:#ECEFF4">&#96;</span><span style="color:#D8DEE9FF">)</span><span style="color:#ECEFF4">.</span><span style="color:#88C0D0">join</span><span style="color:#D8DEE9FF">(</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">L</span><span style="color:#ECEFF4">"</span><span style="color:#D8DEE9FF">)</span></span>
<span class="line"><span style="color:#ECEFF4">  &#125;</span><span style="color:#D8DEE9FF">)</span></span>
<span class="line"><span style="color:#81A1C1">&#x3C;/script></span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">&#x3C;div</span><span style="color:#8FBCBB"> class</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">flex gap-3 m-2</span><span style="color:#ECEFF4">"</span><span style="color:#81A1C1">></span></span>
<span class="line"><span style="color:#81A1C1">  &#x3C;div></span></span>
<span class="line"><span style="color:#D8DEE9FF">    Amplitude</span></span>
<span class="line"><span style="color:#81A1C1">    &#x3C;input</span><span style="color:#8FBCBB"> type</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">range</span><span style="color:#ECEFF4">"</span><span style="color:#81A1C1"> bind</span><span style="color:#ECEFF4">:</span><span style="color:#D8DEE9FF">value</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#D8DEE9">A</span><span style="color:#81A1C1">&#125;>&#x3C;/div></span></span>
<span class="line"><span style="color:#81A1C1">  &#x3C;div></span></span>
<span class="line"><span style="color:#D8DEE9FF">    Frequency</span></span>
<span class="line"><span style="color:#81A1C1">    &#x3C;input</span><span style="color:#8FBCBB"> type</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">range</span><span style="color:#ECEFF4">"</span><span style="color:#81A1C1"> bind</span><span style="color:#ECEFF4">:</span><span style="color:#D8DEE9FF">value</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#D8DEE9">f</span><span style="color:#81A1C1">&#125;</span><span style="color:#8FBCBB"> min</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#B48EAD">1</span><span style="color:#ECEFF4">"</span><span style="color:#8FBCBB"> max</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#B48EAD">10</span><span style="color:#ECEFF4">"</span><span style="color:#8FBCBB"> step</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#B48EAD">0.2</span><span style="color:#ECEFF4">"</span><span style="color:#81A1C1">>&#x3C;/div></span></span>
<span class="line"><span style="color:#81A1C1">&#x3C;/div></span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1">&#x3C;svg</span><span style="color:#8FBCBB"> viewBox</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">0 -100 1000 400</span><span style="color:#ECEFF4">"</span><span style="color:#8FBCBB"> class</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">mx-auto mt-6 w-3/4</span><span style="color:#ECEFF4">"</span><span style="color:#81A1C1">></span></span>
<span class="line"><span style="color:#81A1C1">  &#x3C;path</span><span style="color:#D8DEE9FF"> </span></span>
<span class="line"><span style="color:#8FBCBB">    d</span><span style="color:#ECEFF4">=</span><span style="color:#81A1C1">&#123;</span><span style="color:#D8DEE9">d</span><span style="color:#81A1C1">&#125;</span><span style="color:#D8DEE9FF"> </span></span>
<span class="line"><span style="color:#8FBCBB">    fill</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">none</span><span style="color:#ECEFF4">"</span><span style="color:#D8DEE9FF"> </span></span>
<span class="line"><span style="color:#8FBCBB">    stroke</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">maroon</span><span style="color:#ECEFF4">"</span><span style="color:#D8DEE9FF"> </span></span>
<span class="line"><span style="color:#8FBCBB">    stroke-width</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#B48EAD">4</span><span style="color:#ECEFF4">"</span><span style="color:#D8DEE9FF"> </span></span>
<span class="line"><span style="color:#8FBCBB">    stroke-linecap</span><span style="color:#ECEFF4">=</span><span style="color:#ECEFF4">"</span><span style="color:#A3BE8C">round</span><span style="color:#ECEFF4">"</span><span style="color:#81A1C1">></span></span>
<span class="line"><span style="color:#81A1C1">  &#x3C;/path></span></span>
<span class="line"><span style="color:#81A1C1">&#x3C;/svg></span></span></code></pre>`);var D=a(a(c,!0));a(a(D,!0)),A(s,o)}export{Es as component};
